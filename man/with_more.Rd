% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_more.R
\name{with_more}
\alias{with_more}
\title{Throw conditions with more context}
\usage{
with_more(
  err,
  more_message,
  more_data = NULL,
  with_class = "condition",
  rewrite_call = TRUE,
  call = rlang::caller_call()
)
}
\arguments{
\item{err}{The expression that signals a condition when evaluated. E.g. a call
to \code{stop()}, \code{warning()}, \code{\link[rlang:abort]{rlang::abort()}}, \code{\link[cli:cli_abort]{cli::cli_abort()}} etc.}

\item{more_message}{a reference to the detailed error message to display. Could be:
\itemize{
\item A character vector, in which case it is displayed
\item A file path, in which case the file is opened in the text editor
\item A function, in which case it is run. This could be used to open a help
topic or vignette. It is recommended complex functions that may error are
avoided - as a new error when searching for information on a error would
create a poor user experience.
}}

\item{more_data}{optional data to return with the more call. Note print() is
called on the data so be careful with large matrices etc which print a lot
of output. It is recommended to use a name list, such that the names can be
referred to in the error documentation.}

\item{with_class}{Only attach the more() context and prompt to conditions
bearing this class. Default is 'condition' which is all types of conditions.}

\item{rewrite_call}{For a selection of base conditions like \code{simpleError} and
\code{simpleWarning} the reported origin site of the condition becomes the
internals of \code{with_more()}. To avoid confusion the reported call is automatically
rewritten to the parent of \code{with_more}. In some cases this will also be
wrong, for example if the condition is being thrown nested from within another
function. In this case \code{rewrite_call} can be set to \code{FALSE} to preserve the
reference to the wrapping function.}

\item{call}{The call to use to for the call rewrite. The default is
\code{rlang::caller_fun()} which is likely correct in many cases. The default may be
incorrect if \code{with_more} is nested within a helper function. A different call can be supplied for use in this case.
Although it's probably easier just to use condition signalling from \code{{rlang}}
e.g. \code{\link[rlang:abort]{rlang::abort()}} and set up the call correctly per thier documentation. It
will not be rewritten by \code{with_more} in that case.}
}
\description{
This function sets up additional context, attached to a condition like an error
or warning, that can be retrieved with the \code{more()} call. This includes a
detailed error message and optionally some data relevent to the error
explanation or error debugging. The user is
notified about this availability of this context with a short prompt added as
an addendum to the message associated with the signal.
}
\seealso{
\code{\link[=more]{more()}} for retrieval of context.
}
